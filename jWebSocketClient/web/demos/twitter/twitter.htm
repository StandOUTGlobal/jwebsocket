<!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01//EN" "http://www.w3.org/TR/html4/transitional.dtd">
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="chrome=1">
		<!-- If Google's chrome frame installed, use it! -->
		<!-- Comment needs to be BELOW this meta tag! -->
<!--
//	****************************************************************************
//	jWebSocket Mail Demo (uses jWebSocket Client and Server)
//	(C) 2010 Alexander Schulze, jWebSocket.org, Innotrade GmbH, Herzogenrath
//	****************************************************************************
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	****************************************************************************
-->
		<meta http-equiv="Content-Language" content="en">
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<title>jWebSocket Twitter Demo</title>
		<link rel="stylesheet" type="text/css" href="../../res/css/jwebsocket.css">
		<!-- load the jWebSocket JavaScript client library -->
		<script type="text/javascript" src="../../res/js/jWebSocket.js"></script>
		<!-- this one imports the client side twitter plug-in -->
		<script type="text/javascript" src="../../res/js/jwsTwitterPlugIn.js"></script>
		<script type="text/javascript" language="JavaScript">

			var eLog = null;

			function log( aString ) {
				eLog.innerHTML +=
					aString + "<br>";
				if( eLog.scrollHeight > eLog.clientHeight ) {
					eLog.scrollTop = eLog.scrollHeight - eLog.clientHeight;
				}
			}

			function clearLog() {
				eLog.innerHTML = "";
				eLog.scrollTop = 0;
			}

			var jWebSocketClient = null;
			var gUsername = null;

			function logon() {
				// URL is ws://[yourhostname|localhost]:8787
				var lURL = jws.JWS_SERVER_URL;
				gUsername = eUsername.value;
				var lPassword = ePassword.value;
				ePassword.value = "";

				log( "Connecting to " + lURL + " and logging in as '" + gUsername + "'..." );
				var lRes = jWebSocketClient.logon( lURL, gUsername, lPassword, {
					// OnOpen callback
					OnOpen: function( aEvent ) {
						log( "<font style='color:#888'>jWebSocket connection established.</font>" );
					},
					// OnMessage callback
					OnMessage: function( aEvent, aToken ) {
						var lDate = "";
						if( aToken.date_val ) {
							lDate = jws.tools.ISO2Date( aToken.date_val );
						}
						log( "<font style='color:#888'>jWebSocket '" + aToken.type + "' token received, full message: '" + aEvent.data + "' " + lDate + "</font>" );
					},
					// OnClose callback
					OnClose: function( aEvent ) {
						log( "<font style='color:#888'>jWebSocket connection closed.</font>" );
					}
				});

				log( jWebSocketClient.resultToString( lRes ) );
			}

			function logoff() {
				if( jWebSocketClient ) {
					log( "Logging off " + ( gUsername != null ? "'" + gUsername + "'" : "" ) + " and disconnecting..." );
					// the timeout below  is optional, if you use it you'll get a good-bye message.
					var lRes = jWebSocketClient.close({ timeout: 3000 });
					log( jWebSocketClient.resultToString( lRes ) );
				}
			}

			function getTimeline() {
				jWebSocketClient.twitterTimeline(
					eTwitterUsername.value
				);
			}

			function twitterAuth() {
				jWebSocketClient.twitterAuth(
					eTwitterUsername.value,
					eTwitterPassword.value
				);
			}

			function tweet() {
				jWebSocketClient.tweet(
					eTwitterUsername.value,
					eTwitterPassword.value,
					eTwitterMessage.value
				);
			}

			function onGotTwitterTimeline( aToken ) {
				log( "Timeline: " + aToken.msg );
			}

			function initPage() {
				eLog = jws.$( "sdivLog" );

				eTwitterUsername = jws.$( "stxfTwitterUsername" );
				eTwitterPassword = jws.$( "spwdTwitterPassword" );
				eTwitterMessage = jws.$( "stxfTwitterMessage" );

				eUsername = jws.$( "stxfUsername" );
				ePassword = jws.$( "spwfPassword" );

				// jws.browserSupportsWebSockets checks web if sockets are available
				// either natively, by the Flash Bridge or by the Chrome Frame.
				if( jws.browserSupportsWebSockets() ) {
					jWebSocketClient = new jws.jWebSocketJSONClient();
					jWebSocketClient.setTwitterCallbacks({
						OnGotTwitterTimeline: onGotTwitterTimeline
					});
					eUsername.focus();
				} else {
					jws.$( "sbtnLogon" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnLogoff" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnClear" ).setAttribute( "disabled", "disabled" );

					jws.$( "stxfTwitterUsername" ).setAttribute( "disabled", "disabled" );
					jws.$( "spwdTwitterPassword" ).setAttribute( "disabled", "disabled" );
					jws.$( "stxfTwitterMessage" ).setAttribute( "disabled", "disabled" );

					jws.$( "stxfUsername" ).setAttribute( "disabled", "disabled" );
					jws.$( "spwfPassword" ).setAttribute( "disabled", "disabled" );

					var lMsg = jws.MSG_WS_NOT_SUPPORTED;
					alert( lMsg );
					log( lMsg );
				}
			}

			function exitPage() {
				logoff();
			}

		</script>
	</head>

	<body
		onload="initPage();"
		onunload="exitPage();"
		>
<!--	remarked temporarily due to chrome 5 browser bug
		<script type="text/javascript">
			var lFrameElem = this.frameElement;
			if( !lFrameElem ) {
				location.replace( "../../index.htm?page=demos/hello_world/hello_world.htm" );
				// location.href = "../../index.htm?page=demos/hello_world/hello_world.htm" ;
			}
		</script>
-->		
		<h1>jWebSocket Twitter Demo</h1>
		<p>This demo shows how to easily use Twitter via the jWebSocket Twitter service.</p>
		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" width="100%">
				<tr class="strDlg">
					<td class="stdDlg" width="5">jWebSocket&nbsp;Username</td>
					<td class="stdDlg" width="5"><input class="stxfDlg" id="stxfUsername" type="text" value="YourUsername" style="width:150px"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnLogon" type="button" value="Login" onclick="logon();"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnClear" type="button" value="Clear Log" onclick="clearLog();"></td>
					<td class="stdDlg" width=""><input class="sbtnDlg" id="sbtnLoginTwitter" type="button" value="Twitter Login" onclick="twitterAuth();"></td>
				</tr>
				<tr class="strDlg">
					<td class="stdDlg" width="5">jWebSocket&nbsp;Password</td>
					<td class="stdDlg" width="5"><input class="spwfDlg" id="spwfPassword" type="password" value="" style="width:150px"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnLogoff" type="button" value="Logoff" onclick="logoff();"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnGetTimeline" type="button" value="getTimeline" onclick="getTimeline();"></td>
					<td class="stdDlg" width=""><input class="sbtnDlg" id="sbtnTweet" type="button" value="tweet" onclick="tweet();"></td>
				</tr>
				<tr class="strDlg">
					<td class="stdDlg" width="5">Twitter&nbsp;Username</td>
					<td class="stdDlg" width=""><input class="stxfDlg" id="stxfTwitterUsername" type="text" value="jwebsocket" style="width:150px"></td>
					<td class="stdDlg" width="" colspan="3" rowspan="2">CAUTION! SECURITY ADVISE! If you type your Twitter credentials here they will be passed
						to the jWebSocket Server and forwarded to Twitter to authenticate against Twitter! We respect your privacy and do neither
						save your credentials nor track any data you pass! However, please consider that your credentials will passed in plain
						text unless you use SSL (https).
						This function is for demo purposes only. You pass your credentials at our own risk. If you do so we strongly recommend to
						change your Twitter password immediately after the test!
					</td>
				</tr>
				<tr class="strDlg">
					<td class="stdDlg" width="5">Twitter&nbsp;Password</td>
					<td class="stdDlg" width="5" ><input class="spwfDlg" id="spwdTwitterPassword" type="password" value="" style="width:150px"></td>
				</tr>
				<tr class="strDlg">
					<td class="stdDlg" width="5">Twitter&nbsp;Message</td>
					<td class="stdDlg" width="" colspan="3"><input class="stxfDlg" id="stxfTwitterMessage" type="text" value="Message-Body..." style="width:99%"></td>
				</tr>
			</table>
		</div>
		<div id="sdivLog" class="sdivContainer"
			 style="position:relative; height:300px; overflow:auto;">
		</div>

	</body>
</html>
